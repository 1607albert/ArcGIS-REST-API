{
	"info": {
		"_postman_id": "2af6ef45-a37d-426c-b922-c70d9ff87fa1",
		"name": "Hosted Feature Service - ArcGIS",
		"description": "A feature service can contain datasets (for example, tables and views) with or without a spatial column. Datasets with a spatial column are considered layers; those without a spatial column are considered tables. A feature service allows clients to query and edit feature geometry and attributes.\n\n[More info](https://developers.arcgis.com/rest/services-reference/get-started-with-the-services-directory.htm)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tmp",
			"item": [],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Join two layers",
			"item": [
				{
					"name": "<root-url>/content/users/<username>/createService",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "01bd595f-a39a-49ce-9af8-6857ed870bf2",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Feature service created\"] = responseBody.has(\"encodedServiceURL\");",
									"",
									"function extractSubdomain(iCalContent) {",
									"  var rx = /^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/\\n]+)/igm;",
									"  var arr = rx.exec(iCalContent);",
									"",
									"  return arr[1]; ",
									"}",
									"",
									"var host = extractSubdomain(jsonData.encodedServiceURL);",
									"postman.setEnvironmentVariable(\"host\", host);",
									"",
									"var instance = jsonData.encodedServiceURL.split(\"/\")[3];",
									"postman.setEnvironmentVariable(\"instance\", instance);",
									"",
									"var itemId = jsonData.serviceItemId;",
									"postman.setEnvironmentVariable(\"itemId\", itemId);",
									"",
									"var serviceName = jsonData.name;",
									"postman.setEnvironmentVariable(\"serviceName\", serviceName);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "df83841d-2ab5-4857-b6a1-7f14b18b458c",
								"exec": [
									"var protocol = pm.environment.get(\"protocol\");",
									"var portalHost = pm.environment.get(\"portalHost\");",
									"var portalPort = pm.environment.get(\"portalPort\");",
									"var username = pm.environment.get(\"username\");",
									"var password = pm.environment.get(\"password\");",
									"",
									"const echoPostRequest = {",
									"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
									"    method: 'POST',",
									"    header: {",
									"        'Accept': 'application/json',",
									"        'Content-Type': 'application/x-www-form-urlencoded'",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            {key: \"f\", value: \"json\", disabled: false},",
									"            {key: \"username\", value: username, disabled: false},",
									"            {key: \"password\", value: password, disabled: false},",
									"            {key: \"client\", value: \"referer\", disabled: false},",
									"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
									"            {key: \"expiration\", value: 21600, disabled: false},",
									"        ]",
									"        ",
									"    }",
									"};",
									"",
									"pm.sendRequest(echoPostRequest, function (err, response) {",
									"    if (err && err.code) { ",
									"        console.log(\"Request error: \", err);",
									"    }else{",
									"        try{",
									"            var res = response.json();",
									"            var token = res.token;",
									"            ",
									"            if(token) {",
									"                pm.environment.set(\"token\", token);",
									"            }",
									"        }catch(e){",
									"            console.log(`Catch error: ${e.message}`);",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "createParameters",
									"value": "{\"currentVersion\":10.2,\"serviceDescription\":\"\",\"hasVersionedData\":false,\"supportsDisconnectedEditing\":false,\"hasStaticData\":true,\"maxRecordCount\":2000,\"supportedQueryFormats\":\"JSON\",\"capabilities\":\"Query\",\"description\":\"\",\"copyrightText\":\"\",\"allowGeometryUpdates\":false,\"syncEnabled\":false,\"editorTrackingInfo\":{\"enableEditorTracking\":false,\"enableOwnershipAccessControl\":false,\"allowOthersToUpdate\":true,\"allowOthersToDelete\":true},\"xssPreventionInfo\":{\"xssPreventionEnabled\":true,\"xssPreventionRule\":\"InputOnly\",\"xssInputRule\":\"rejectInvalid\"},\"tables\":[],\"name\":\"Join_Features_FeaturerLayerName_AND_TableName_2\"}"
								},
								{
									"key": "f",
									"value": "json"
								},
								{
									"key": "isView",
									"value": "true"
								},
								{
									"key": "outputType",
									"value": "featureService"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"url": {
							"raw": "{{protocol}}://{{portalHost}}:{{portalPort}}/sharing/rest/content/users/{{username}}/createService",
							"protocol": "{{protocol}}",
							"host": [
								"{{portalHost}}"
							],
							"port": "{{portalPort}}",
							"path": [
								"sharing",
								"rest",
								"content",
								"users",
								"{{username}}",
								"createService"
							]
						},
						"description": "First, create an empty database"
					},
					"response": []
				},
				{
					"name": "<admin-catalog-url>/<serviceName>/FeatureServer/addToDefinition",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "addToDefinition",
									"value": "{\"layers\":[{\"name\":\"Join_Features_FeaturerLayerName_AND_TableName\",\"displayField\":\"\",\"description\":\"AttributeJoin\",\"adminLayerInfo\":{\"viewLayerDefinition\":{\"table\":{\"name\":\"Testing_purposes_POSTMAN_Collection_1570094204565_target\",\"sourceServiceName\":\"Testing_purposes_POSTMAN_Collection\",\"sourceLayerId\":0,\"sourceLayerFields\":[{\"name\":\"GlobalID\",\"alias\":\"\",\"source\":\"GlobalID\"},{\"name\":\"CreationDate\",\"alias\":\"CreationDate\",\"source\":\"CreationDate\"},{\"name\":\"Creator\",\"alias\":\"Creator\",\"source\":\"Creator\"},{\"name\":\"EditDate\",\"alias\":\"EditDate\",\"source\":\"EditDate\"},{\"name\":\"Editor\",\"alias\":\"Editor\",\"source\":\"Editor\"},{\"name\":\"Name\",\"alias\":\"Beach Name\",\"source\":\"Name\"},{\"name\":\"SandType\",\"alias\":\"Sand type\",\"source\":\"SandType\"}],\"relatedTables\":[{\"name\":\"Testing_purposes_POSTMAN_Collection_1570094204566_join\",\"sourceServiceName\":\"Testing_purposes_POSTMAN_Collection\",\"sourceLayerId\":3,\"sourceLayerFields\":[{\"name\":\"Start_Date\",\"alias\":\"Start Date\",\"source\":\"Start_Date\"},{\"name\":\"Start_Time\",\"alias\":\"Start Time\",\"source\":\"Start_Time\"},{\"name\":\"End_Date\",\"alias\":\"End Date\",\"source\":\"End_Date\"},{\"name\":\"End_Time\",\"alias\":\"End Time\",\"source\":\"End_Time\"},{\"name\":\"Event_Title\",\"alias\":\"Event Title\",\"source\":\"Event_Title\"},{\"name\":\"All_Day_Event\",\"alias\":\"All Day Event\",\"source\":\"All_Day_Event\"},{\"name\":\"No_End_Time\",\"alias\":\"No End Time\",\"source\":\"No_End_Time\"},{\"name\":\"Event_Description\",\"alias\":\"Event Description\",\"source\":\"Event_Description\"},{\"name\":\"Contact\",\"alias\":\"Contact\",\"source\":\"Contact\"},{\"name\":\"Contact_Email\",\"alias\":\"Contact Email\",\"source\":\"Contact_Email\"},{\"name\":\"Contact_Phone\",\"alias\":\"Contact Phone\",\"source\":\"Contact_Phone\"},{\"name\":\"Location\",\"alias\":\"Location\",\"source\":\"Location\"},{\"name\":\"Category\",\"alias\":\"Category\",\"source\":\"Category\"},{\"name\":\"Mandatory\",\"alias\":\"Mandatory\",\"source\":\"Mandatory\"},{\"name\":\"Registration\",\"alias\":\"Registration\",\"source\":\"Registration\"},{\"name\":\"Maximum\",\"alias\":\"Maximum\",\"source\":\"Maximum\"},{\"name\":\"Last_Date_To_Register\",\"alias\":\"Last Date To Register\",\"source\":\"Last_Date_To_Register\"},{\"name\":\"GlobalID_1570094204566\",\"alias\":\"\",\"source\":\"GlobalID\"}],\"type\":\"INNER\",\"parentKeyFields\":[\"Name\"],\"keyFields\":[\"Event_Title\"],\"topFilter\":{\"groupByFields\":\"Event_Title\",\"orderByFields\":\"ObjectId ASC\",\"topCount\":1}}],\"materialized\":false}},\"geometryField\":{\"name\":\"Testing_purposes_POSTMAN_Collection_1570094204565_target.Shape\"}}}]}"
								},
								{
									"key": "f",
									"value": "json"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/addToDefinition",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"{{instance}}",
								"arcgis",
								"rest",
								"admin",
								"services",
								"{{serviceName}}",
								"FeatureServer",
								"addToDefinition"
							]
						},
						"description": "Add a layer with **just adminLayerInfo**. With this structure:\n\n```\n{\n\t\"layers\": [{\n\t\t\"name\": \"Join_Features_FeaturerLayerName_AND_TableName\",\n\t\t\"displayField\": \"\",\n\t\t\"description\": \"AttributeJoin\",\n\t\t\"adminLayerInfo\": {\n\t\t\t\"viewLayerDefinition\": {\n\t\t\t\t\"table\": {\n\t\t\t\t\t\"name\": \"Testing_purposes_POSTMAN_Collection_1570094204565_target\",\n\t\t\t\t\t\"sourceServiceName\": \"Testing_purposes_POSTMAN_Collection\",\n\t\t\t\t\t\"sourceLayerId\": 0,\n\t\t\t\t\t\"sourceLayerFields\": [...],\n\t\t\t\t\t\"relatedTables\": [{\n\t\t\t\t\t\t\"name\": \"Testing_purposes_POSTMAN_Collection_1570094204566_join\",\n\t\t\t\t\t\t\"sourceServiceName\": \"Testing_purposes_POSTMAN_Collection\",\n\t\t\t\t\t\t\"sourceLayerId\": 3,\n\t\t\t\t\t\t\"sourceLayerFields\": [...],\n\t\t\t\t\t\t\"type\": \"INNER\",\n\t\t\t\t\t\t\"parentKeyFields\": [\"Name\"],\n\t\t\t\t\t\t\"keyFields\": [\"Event_Title\"],\n\t\t\t\t\t\t\"topFilter\": {\n\t\t\t\t\t\t\t\"groupByFields\": \"Event_Title\",\n\t\t\t\t\t\t\t\"orderByFields\": \"ObjectId ASC\",\n\t\t\t\t\t\t\t\"topCount\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\t\"materialized\": false\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"geometryField\": {\n\t\t\t\t\"name\": \"Testing_purposes_POSTMAN_Collection_1570094204565_target.Shape\"\n\t\t\t}\n\t\t}\n\t}]\n}\n```\n\nWhere `òbj.layers[0].adminLayerInfo.viewLayerDefinition.table.relatedTables` define the information about the join: `sourceServiceName`, `type`, `parentKeyFields`, `keyFields`, ..."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "<root-url>/portals/<instance>/isServiceNameAvailable",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "77b61f4e-1e88-4c9b-8c55-2721771423f3",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{portalHost}}:{{portalPort}}/sharing/rest/portals/{{instance}}/isServiceNameAvailable?name={{serviceName}}&f=pjson&token={{token}}&type=Feature Service",
					"protocol": "{{protocol}}",
					"host": [
						"{{portalHost}}"
					],
					"port": "{{portalPort}}",
					"path": [
						"sharing",
						"rest",
						"portals",
						"{{instance}}",
						"isServiceNameAvailable"
					],
					"query": [
						{
							"key": "name",
							"value": "{{serviceName}}"
						},
						{
							"key": "f",
							"value": "pjson"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "type",
							"value": "Feature Service"
						}
					]
				},
				"description": "Checks whether a given service name and type are available for publishing a new service. true indicates that the name and type is not found in the organization's services and is available for publishing. false means the requested name and type are not available | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#how-to-check-if-a-database-exists)."
			},
			"response": []
		},
		{
			"name": "<root-url>/content/users/<username>/createService",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0aac531a-8b74-4485-ba86-ee1c87ff2b4c",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "636fea70-c035-477d-868a-a736a6ddbda2",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Feature service created\"] = responseBody.has(\"encodedServiceURL\");",
							"",
							"function extractSubdomain(iCalContent) {",
							"  var rx = /^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/\\n]+)/igm;",
							"  var arr = rx.exec(iCalContent);",
							"",
							"  return arr[1]; ",
							"}",
							"",
							"var host = extractSubdomain(jsonData.encodedServiceURL);",
							"postman.setEnvironmentVariable(\"host\", host);",
							"",
							"var instance = jsonData.encodedServiceURL.split(\"/\")[3];",
							"postman.setEnvironmentVariable(\"instance\", instance);",
							"",
							"var itemId = jsonData.serviceItemId;",
							"postman.setEnvironmentVariable(\"itemId\", itemId);",
							"",
							"var serviceName = jsonData.name;",
							"postman.setEnvironmentVariable(\"serviceName\", serviceName);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "createParameters",
							"value": "{\"name\":\"NewFeatureService\",\"serviceDescription\":\"Description text\",\"hasStaticData\":false,\"maxRecordCount\":1000,\"supportedQueryFormats\":\"JSON\",\"capabilities\":\"Create,Delete,Query,Update,Editing\",\"description\":\"\",\"copyrightText\":\"\",\"spatialReference\":{\"wkid\":102100},\"initialExtent\":{\"xmin\":-0.000004988163709640503,\"ymin\":2504688.542852979,\"xmax\":2504688.542843003,\"ymax\":5009377.085700966,\"spatialReference\":{\"wkid\":102100}},\"allowGeometryUpdates\":true,\"units\":\"esriMeters\",\"xssPreventionInfo\":{\"xssPreventionEnabled\":true,\"xssPreventionRule\":\"InputOnly\",\"xssInputRule\":\"rejectInvalid\"}}",
							"type": "text"
						},
						{
							"key": "targetType",
							"value": "featureService",
							"type": "text"
						},
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "f",
							"value": "pjson",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{portalHost}}:{{portalPort}}/sharing/rest/content/users/{{username}}/createService",
					"protocol": "{{protocol}}",
					"host": [
						"{{portalHost}}"
					],
					"port": "{{portalPort}}",
					"path": [
						"sharing",
						"rest",
						"content",
						"users",
						"{{username}}",
						"createService"
					]
				},
				"description": "The Create Service operation allows users to create a hosted feature service. You can use the API to create an empty hosted feature service from a feature service metadata JSON | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#how-to-create-an-empty-database)."
			},
			"response": []
		},
		{
			"name": "<root-url>/content/users/<username>/shareItems",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fe0623d4-1822-44fb-a700-cd4105ac05f4",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "account",
							"value": "true"
						},
						{
							"key": "everyone",
							"value": "true"
						},
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "groups",
							"value": ""
						},
						{
							"key": "items",
							"value": "{{itemId}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{portalHost}}:{{portalPort}}/sharing/rest/content/users/{{username}}/shareItems",
					"protocol": "{{protocol}}",
					"host": [
						"{{portalHost}}"
					],
					"port": "{{portalPort}}",
					"path": [
						"sharing",
						"rest",
						"content",
						"users",
						"{{username}}",
						"shareItems"
					]
				},
				"description": "This operation allows to share a database (including all contained tables) with:\n\n* Everyone, in which case they are publicly accessible\n* With any user in an ArcGIS organization \n* With a list of user groups within ArcGIS. \n\n[Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#visibility)."
			},
			"response": []
		},
		{
			"name": "<root-url>/content/users/<username>/items/<itemId>/update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3d97c23d-0beb-4434-8028-cec40ed11c43",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "extent",
							"value": "-180,-58.976,-90,73.136"
						},
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "snippet",
							"value": ""
						},
						{
							"key": "tags",
							"value": "Data Collection"
						},
						{
							"key": "thumbnailURL",
							"value": "http://services.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/export?size=800,532&bboxSR=4326&format=png24&f=image&bbox=-180,-58.976,-90,73.136"
						},
						{
							"key": "title",
							"value": "My Point Layer"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "typeKeywords",
							"value": "Build a layer,Collector,Data,Feature Service Template,General,Layer,Layer Template,Platform,Service template,Template"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{portalHost}}:{{portalPort}}/sharing/rest/content/users/{{username}}/items/{{itemId}}/update",
					"protocol": "{{protocol}}",
					"host": [
						"{{portalHost}}"
					],
					"port": "{{portalPort}}",
					"path": [
						"sharing",
						"rest",
						"content",
						"users",
						"{{username}}",
						"items",
						"{{itemId}}",
						"update"
					]
				},
				"description": "Update item information and their file, URL, or text depending on type. Users can use this operation to update item information such as title, description, tags, and so on, or use it to update an item's file, URL, or text. This call is available to the user and the administrator of the organization.\n\nThe parameters that are to be updated need to be specified in the request. Parameters not specified will not be affected.\n\nAll parameters for this operation are optional.\n\n[Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#how-to-change-database-info)"
			},
			"response": []
		},
		{
			"name": "<root-url>/content/users/<username>/items/<itemId>/delete",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7dfef45e-5769-4c0b-a298-9da169f8f92d",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{portalHost}}:{{portalPort}}/sharing/rest/content/users/{{username}}/items/{{itemId}}/delete",
					"protocol": "{{protocol}}",
					"host": [
						"{{portalHost}}"
					],
					"port": "{{portalPort}}",
					"path": [
						"sharing",
						"rest",
						"content",
						"users",
						"{{username}}",
						"items",
						"{{itemId}}",
						"delete"
					]
				},
				"description": "This operation removes both the item and its link from the user's folder by default. For example, you can use it to remove a database.\n\nThis operation is available to the user and to the administrator of the organization to which the user belongs | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#how-to-remove-a-database)"
			},
			"response": []
		},
		{
			"name": "<admin-catalog-url>/<serviceName>/FeatureServer/addToDefinition",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d3f0c54b-788e-4821-b0ca-fd9d3525ae3c",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "addToDefinition",
							"value": "{\"layers\":[{\"currentVersion\":10.51,\"id\":0,\"name\":\"Point layer\",\"type\":\"Feature Layer\",\"displayField\":\"\",\"description\":\"\",\"copyrightText\":\"\",\"defaultVisibility\":true,\"editingInfo\":{\"lastEditDate\":null},\"relationships\":[],\"isDataVersioned\":false,\"supportsAppend\":true,\"supportsCalculate\":true,\"supportsTruncate\":true,\"supportsAttachmentsByUploadId\":true,\"supportsAttachmentsResizing\":true,\"supportsRollbackOnFailureParameter\":true,\"supportsStatistics\":true,\"supportsAdvancedQueries\":true,\"supportsValidateSql\":true,\"supportsCoordinatesQuantization\":true,\"supportsApplyEditsWithGlobalIds\":false,\"advancedQueryCapabilities\":{\"supportsPagination\":true,\"supportsPaginationOnAggregatedQueries\":true,\"supportsQueryRelatedPagination\":true,\"supportsQueryWithDistance\":true,\"supportsReturningQueryExtent\":true,\"supportsStatistics\":true,\"supportsOrderBy\":true,\"supportsDistinct\":true,\"supportsQueryWithResultType\":true,\"supportsSqlExpression\":true,\"supportsAdvancedQueryRelated\":true,\"supportsCountDistinct\":true,\"supportsLod\":true,\"supportsReturningGeometryCentroid\":false,\"supportsQueryWithDatumTransformation\":true,\"supportsHavingClause\":true,\"supportsOutFieldSQLExpression\":true},\"useStandardizedQueries\":true,\"geometryType\":\"esriGeometryPoint\",\"minScale\":0,\"maxScale\":0,\"extent\":{\"xmin\":-20037508.342788905,\"ymin\":-8175201.3721496435,\"xmax\":-10018754.171394452,\"ymax\":12175461.54272524,\"spatialReference\":{\"wkid\":102100}},\"drawingInfo\":{\"renderer\":{\"type\":\"simple\",\"symbol\":{\"type\":\"esriPMS\",\"url\":\"RedSphere.png\",\"imageData\":\"iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAAGXRFWHRTb2Z0d2FyZQBQYWludC5ORVQgdjMuNS4xTuc4+QAAB3VJREFUeF7tmPlTlEcexnve94U5mANQbgQSbgiHXHINlxpRIBpRI6wHorLERUmIisKCQWM8cqigESVQS1Kx1piNi4mW2YpbcZONrilE140RCTcy3DDAcL/zbJP8CYPDL+9Ufau7uqb7eZ7P+/a8PS8hwkcgIBAQCAgEBAICAYGAQEAgIBAQCAgEBAICAYGAQEAgIBAQCDx/AoowKXFMUhD3lQrioZaQRVRS+fxl51eBTZUTdZ41U1Rox13/0JF9csGJ05Qv4jSz/YPWohtvLmSKN5iTGGqTm1+rc6weICOBRbZs1UVnrv87T1PUeovxyNsUP9P6n5cpHtCxu24cbrmwKLdj+osWiqrVKhI0xzbmZ7m1SpJ+1pFpvE2DPvGTomOxAoNLLKGLscZYvB10cbYYjrJCb7A5mrxleOBqim+cWJRakZY0JfnD/LieI9V1MrKtwokbrAtU4Vm0A3TJnphJD4B+RxD0u0LA7w7FTE4oprOCMbklEGNrfdGf4IqnQTb4wc0MFTYibZqM7JgjO8ZdJkpMln/sKu16pHZGb7IfptIWg389DPp9kcChWODoMuDdBOhL1JgpisbUvghM7AqFbtNiaFP80RLnhbuBdqi0N+1dbUpWGde9gWpuhFi95yL7sS7BA93JAb+Fn8mh4QujgPeTgb9kAZf3Apd2A+fXQ38yHjOHozB1IAJjOSEY2RSIwVUv4dd4X9wJccGHNrJ7CYQ4GGjLeNNfM+dyvgpzQstKf3pbB2A6m97uBRE0/Ergcxr8hyqg7hrwn0vAtRIKIRX6Y2pMl0RhIj8co9nBGFrvh55l3ngU7YObng7IVnFvGS+BYUpmHziY/Ls2zgP9SX50by/G9N5w6I+ogYvpwK1SoOlHQNsGfWcd9Peqof88B/rTyzF9hAIopAByQzC0JQB9ST5oVnvhnt+LOGsprvUhxNIwa0aY7cGR6Cp7tr8+whkjawIxkRWC6YJI6N+lAKq3Qf/Tx+B77oGfaQc/8hB8w2Xwtw9Bf3kzZspXY/JIDEbfpAB2BKLvVV90Jvjgoac9vpRxE8kciTVCBMMkNirJ7k/tRHyjtxwjKV4Yp3t/6s+R4E+/DH3N6+BrS8E314Dvvg2+/Sb4hxfBf5sP/up2TF3ZhonK1zD6dhwGdwail26DzqgX8MRKiq9ZBpkSkmeYOyPM3m9Jjl+1Z9D8AgNtlAq6bZ70qsZi+q+bwV/7I/hbB8D/dAr8Axq89iz474p/G5++koHJy1sx/lkGdBc2YjA3HF0rHNHuboomuQj/5DgclIvOGCGCYRKFFuTMV7YUAD3VDQaLMfyqBcZORGPy01QKYSNm/rYV/Nd/Av9NHvgbueBrsjDzRQamKKDxT9Kgq1iLkbIUDOSHoiNcgnYHgnYZi+9ZExSbiSoMc2eE2flKcuJLa4KGRQz6/U0wlGaP0feiMH4uFpMXEjBVlYjp6lWY+SSZtim0kulYMiYuJEJXuhTDJ9UYPByOvoIwdCxfgE4bAo0Jh39xLAoVpMwIEQyTyFCQvGpLon9sJ0K3J4OBDDcMH1dj9FQsxkrjMPFRPCbOx2GyfLal9VEcxstioTulxjAFNfROJPqLl6Bnfyg6V7ugz5yBhuHwrZjBdiU5YJg7I8wOpifAKoVIW7uQ3rpOBH2b3ekVjYT2WCRG3o+mIGKgO0OrlIaebU/HYOQDNbQnojB4NJyGD0NPfjA0bwTRE6Q7hsUcWhkWN8yZqSQlWWGECAZLmJfJmbrvVSI8taK37xpbdB/wQW8xPee/8xIGjvlj8IQ/hk4G0JbWcX8MHPVDX4kveoq8ocn3xLM33NCZRcPHOGJYZIKfpQyq7JjHS6yJjcHujLHADgkpuC7h8F8zEVqXSNC2awE69lqhs8AamkO26HrbDt2H7dBVQov2NcW26CiwQtu+BWjdY4n2nZboTbfCmKcCnRyDO/YmyLPnDlHvjDH8G6zhS9/wlEnYR7X00fWrFYuWdVI0ZpuhcbcczW/R2qdAcz6t/bRov4mONeaaoYl+p22rHF0bVNAmKtBvweIXGxNcfFH8eNlC4m6wMWMusEnKpn5hyo48pj9gLe4SNG9QoGGLAk8z5XiaJUd99u8122/IpBA2K9BGg2vWWKAvRYVeLzEa7E1R422m2+MsSTem97nSYnfKyN6/mzATv7AUgqcMrUnmaFlLX3ysM0fj+t/b5lQLtK22QEfyAmiSLKFZpUJ7kBRPXKW4HqCYynWVHKSG2LkyZex1uO1mZM9lKem9Tx9jjY5iNEYo0bKMhn7ZAu0r6H5PpLXCAq0rKJClSjSGynE/QIkrQYqBPe6S2X+AJsY2Ped6iWZk6RlL0c2r5szofRsO9R5S1IfQLRCpQL1aifoYFerpsbkuTImaUJXuXIDiH6/Ys8vm3Mg8L2i20YqsO7fItKLcSXyn0kXccclVqv3MS6at9JU/Ox+ouns+SF6Z4cSupz7l8+z1ucs7LF1AQjOdxfGZzmx8Iu1TRcfnrioICAQEAgIBgYBAQCAgEBAICAQEAgIBgYBAQCAgEBAICAQEAv8H44b/6ZiGvGAAAAAASUVORK5CYII=\",\"contentType\":\"image/png\",\"width\":15,\"height\":15}}},\"allowGeometryUpdates\":true,\"hasAttachments\":true,\"htmlPopupType\":\"esriServerHTMLPopupTypeNone\",\"hasM\":false,\"hasZ\":false,\"objectIdField\":\"OBJECTID\",\"uniqueIdField\":{\"name\":\"OBJECTID\",\"isSystemMaintained\":true},\"globalIdField\":\"\",\"typeIdField\":\"\",\"fields\":[{\"name\":\"OBJECTID\",\"type\":\"esriFieldTypeOID\",\"alias\":\"OBJECTID\",\"sqlType\":\"sqlTypeOther\",\"nullable\":false,\"editable\":false,\"domain\":null,\"defaultValue\":null},{\"name\":\"NewField1\",\"type\":\"esriFieldTypeString\",\"alias\":\"New Field1\",\"nullable\":true,\"editable\":true,\"length\":256},{\"name\":\"NewField2\",\"type\":\"esriFieldTypeDouble\",\"alias\":\"New Field2\",\"nullable\":true,\"editable\":true}],\"indexes\":[],\"types\":[],\"templates\":[{\"name\":\"New Feature\",\"description\":\"\",\"drawingTool\":\"esriFeatureEditToolPoint\",\"prototype\":{\"attributes\":{}}}],\"supportedQueryFormats\":\"JSON, geoJSON\",\"hasStaticData\":false,\"maxRecordCount\":2000,\"standardMaxRecordCount\":32000,\"tileMaxRecordCount\":8000,\"maxRecordCountFactor\":1,\"capabilities\":\"Query,Editing,Create,Update,Delete,Sync\",\"syncEnabled\":true,\"adminLayerInfo\":{\"geometryField\":{\"name\":\"Shape\",\"srid\":102100}}}],\"tables\":[]}"
						},
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/addToDefinition",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"admin",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"addToDefinition"
					]
				},
				"description": "This operation allows us to add a table to a database (`<serviceName>` param). The result of this operation is a response indicating success or failure with error code and description.\n\nIn the `addToDefinition` param you have to define which layer type you want to create.\n\n* [Example of point layer](https://github.com/esri-es/ArcGIS-REST-API/blob/master/HostedFeatureServices/serviceDefinition.md#point-layer)\n* [Example of polyline layer](https://github.com/esri-es/ArcGIS-REST-API/blob/master/HostedFeatureServices/serviceDefinition.md#polyline-layer)\n* [Example of polygon layer](https://github.com/esri-es/ArcGIS-REST-API/blob/master/HostedFeatureServices/serviceDefinition.md#polygon-layer)\n* [Example of standalone table](https://github.com/esri-es/ArcGIS-REST-API/blob/master/HostedFeatureServices/serviceDefinition.md#table)\n \nLearn more about:\n\n* [How to create a table](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#create-a-table)\n* [The service definition specification](https://github.com/esri-es/ArcGIS-REST-API/blob/master/HostedFeatureServices/serviceDefinition.md#service-definition-specification)"
			},
			"response": []
		},
		{
			"name": "<admin-catalog-url>/<serviceName>/FeatureServer/updateDefinition",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "13d35a19-743c-4bbf-82a3-2398869e698b",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "async",
							"value": "true"
						},
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "updateDefinition",
							"value": "{\"capabilities\":\"Query\",\"hasStaticData\":true,\"editorTrackingInfo\":{\"enableEditorTracking\":false,\"enableOwnershipAccessControl\":false,\"allowOthersToUpdate\":true,\"allowOthersToDelete\":true,\"allowOthersToQuery\":true,\"allowAnonymousToUpdate\":true,\"allowAnonymousToDelete\":true}}"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/updateDefinition",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"admin",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"updateDefinition"
					]
				},
				"description": "This operation allows us to change who is able to edit the service, who can do what, if we want to keep track of who created and updated records and when, manage spatial indexes, enable cache (CDN), and manage if export data is publicly for everyone. The result of this operation is a response indicating success or failure with error code and description | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#edition-manage-indexes-cache-control-and-allow-export-data)."
			},
			"response": []
		},
		{
			"name": "<admin-catalog-url>/<serviceName>/FeatureServer/deleteFromDefinition",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6a88a47b-6a55-45f5-9a39-527673e6f0ad",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "async",
							"value": "false"
						},
						{
							"key": "deleteFromDefinition",
							"value": "{\"layers\":[{\"id\":\"0\"}]}"
						},
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/deleteFromDefinition",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"admin",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"deleteFromDefinition"
					]
				},
				"description": "This operation supports deleting a definition property from a hosted feature service. For example we can remove a table from the database. The result of this operation is a response indicating success or failure with error code and description | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#remove-a-table)."
			},
			"response": []
		},
		{
			"name": "<admin-catalog-url>/<serviceName>/FeatureServer/<layerId>/addToDefinition",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "74262687-cf39-4070-a40f-2bb0ce07136d",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "addToDefinition",
							"value": "{\"fields\":[{\"name\":\"NewField1\",\"type\":\"esriFieldTypeString\",\"alias\":\"New Field1\",\"nullable\":true,\"editable\":true,\"length\":256},{\"name\":\"NewField2\",\"type\":\"esriFieldTypeDouble\",\"alias\":\"New Field2\",\"nullable\":true,\"editable\":true}]}",
							"type": "text"
						},
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "f",
							"value": "json",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/{{layerId}}/addToDefinition",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"admin",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"addToDefinition"
					]
				},
				"description": "This operation supports adding a definition property in a hosted feature service layer, for example add a new field. The result of this operation is a response indicating success or a response indicating failure with an error code and description. [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#add-fields-to-a-table)."
			},
			"response": []
		},
		{
			"name": "<admin-catalog-url>/<serviceName>/FeatureServer/<layerId>",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "74262687-cf39-4070-a40f-2bb0ce07136d",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/{{layerId}}?f=pjson&token={{token}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"admin",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}"
					],
					"query": [
						{
							"key": "f",
							"value": "pjson"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"description": "This operation supports adding a definition property in a hosted feature service layer, for example add a new field. The result of this operation is a response indicating success or a response indicating failure with an error code and description. [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#add-fields-to-a-table)."
			},
			"response": []
		},
		{
			"name": "<admin-catalog-url>/<serviceName>/FeatureServer/<layerId>/updateDefinition",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "610d9700-1d39-4fe3-847e-341d2010b196",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "async",
							"value": "false"
						},
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "updateDefinition",
							"value": "{\"name\":\"Point layer - new name\"}"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/{{layerId}}/updateDefinition",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"admin",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"updateDefinition"
					]
				},
				"description": "The updateDefinition operation supports updating a definition property in a feature service layer. This will allow us for example to change name of the table/layer, update the drawing info when adding a new field to the layer, etc. The result of this operation is a response indicating success or failure with error code and description. | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#change-a-table-name)"
			},
			"response": []
		},
		{
			"name": "<admin-catalog-url>/<serviceName>/FeatureServer/<layerId>/deleteFromDefinition",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "74262687-cf39-4070-a40f-2bb0ce07136d",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "deleteFromDefinition",
							"value": "{\"fields\":[{\"name\":\"NewField\"}]}",
							"type": "text"
						},
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "f",
							"value": "json",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/admin/services/{{serviceName}}/FeatureServer/{{layerId}}/deleteFromDefinition",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"admin",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"deleteFromDefinition"
					]
				},
				"description": "This operation supports deleting a definition property in a hosted feature service layer, for example remove a field. The result of this operation is a response indicating success or a response indicating failure with an error code and description. [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#remove-fields-from-a-table)."
			},
			"response": []
		},
		{
			"name": "<catalog-url>/<serviceName>/FeatureServer",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/services/{{serviceName}}/FeatureServer?f=pjson",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"services",
						"{{serviceName}}",
						"FeatureServer"
					],
					"query": [
						{
							"key": "f",
							"value": "pjson"
						}
					]
				},
				"description": "This resource provides basic information about the feature service, including the feature layers and tables that it contains, the service description, and so on | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#how-to-get-database-info)."
			},
			"response": []
		},
		{
			"name": "<catalog-url>/<serviceName>/FeatureServer/<layerId>/addFeatures",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8db454a5-91a7-4046-a8a2-d7bbcd8bb97f",
						"exec": [
							"var protocol = pm.environment.get(\"protocol\");",
							"var portalHost = pm.environment.get(\"portalHost\");",
							"var portalPort = pm.environment.get(\"portalPort\");",
							"var username = pm.environment.get(\"username\");",
							"var password = pm.environment.get(\"password\");",
							"",
							"const echoPostRequest = {",
							"    url:  `${protocol}://${portalHost}:${portalPort}/sharing/rest/generateToken`,",
							"    method: 'POST',",
							"    header: {",
							"        'Accept': 'application/json',",
							"        'Content-Type': 'application/x-www-form-urlencoded'",
							"    },",
							"    body: {",
							"        mode: 'urlencoded',",
							"        urlencoded: [",
							"            {key: \"f\", value: \"json\", disabled: false},",
							"            {key: \"username\", value: username, disabled: false},",
							"            {key: \"password\", value: password, disabled: false},",
							"            {key: \"client\", value: \"referer\", disabled: false},",
							"            {key: \"referer\", value: \"arcgis.com\", disabled: false},",
							"            {key: \"expiration\", value: 21600, disabled: false},",
							"        ]",
							"        ",
							"    }",
							"};",
							"",
							"pm.sendRequest(echoPostRequest, function (err, response) {",
							"    if (err && err.code) { ",
							"        console.log(\"Request error: \", err);",
							"    }else{",
							"        try{",
							"            var res = response.json();",
							"            var token = res.token;",
							"            ",
							"            if(token) {",
							"                pm.environment.set(\"token\", token);",
							"            }",
							"        }catch(e){",
							"            console.log(`Catch error: ${e.message}`);",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "206191fc-8387-47cc-bf11-9c017c3abeac",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"if(jsonData.addResults.length > 0){",
							"    tests[\"Features added\"] = true;",
							"}",
							"",
							"var featureId = jsonData.addResults[0].objectId;",
							"postman.setEnvironmentVariable(\"featureId\", featureId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "features",
							"value": "[{\"attributes\":{\"NewField1\":\"value1\",\"NewField2\":1.1},\"geometry\":{\"x\":\"-3.80704\",\"y\":\"43.46217\"}},{\"attributes\":{\"NewField1\":\"value3\",\"NewField2\":1.2},\"geometry\":{\"x\":\"-3.80549\",\"y\":\"43.46242\"}}]",
							"type": "text"
						},
						{
							"key": "token",
							"value": "{{token}}",
							"type": "text"
						},
						{
							"key": "f",
							"value": "json",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/services/{{serviceName}}/FeatureServer/{{layerId}}/addFeatures",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"addFeatures"
					]
				},
				"description": "This operation adds records to the associated feature layer or table | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#add-records)."
			},
			"response": []
		},
		{
			"name": "<catalog-url>/<serviceName>/FeatureServer/<layerId>/query",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/services/{{serviceName}}/FeatureServer/{{layerId}}/query?f=json&where=1=1&outFields=*&token={{token}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"query"
					],
					"query": [
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "where",
							"value": "1=1"
						},
						{
							"key": "outFields",
							"value": "*"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"description": "The result of this operation is either a feature set or an array of feature IDs (if `returnIdsOnly` is set to `true`) and/or a result extent (if `returnExtentOnly` is set to `true`) | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#query-records)."
			},
			"response": []
		},
		{
			"name": "<catalog-url>/<serviceName>/FeatureServer/<layerId>/applyEdits",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "updates",
							"value": "[{\"attributes\":{\"OBJECTID\":1,\"NewField1\":\"Updated value\",\"NewField2\":3.3}}]"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/services/{{serviceName}}/FeatureServer/{{layerId}}/applyEdits",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"applyEdits"
					]
				},
				"description": "This operation adds, updates, and deletes features to the associated feature layer or table in a single call | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#add-update-and-delete-multiple-records-with-a-single-call)."
			},
			"response": []
		},
		{
			"name": "<catalog-url>/<serviceName>/FeatureServer/<layerId>/deleteFeatures",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "where",
							"value": "OBJECTID > 2"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/services/{{serviceName}}/FeatureServer/{{layerId}}/deleteFeatures",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"deleteFeatures"
					]
				},
				"description": "This operation deletes records in a feature layer or table. A list of objectIds or a `where` clause can be used to specify which records we want to delete. We can also specify a spatial filter and much more | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#delete-records)."
			},
			"response": []
		},
		{
			"name": "<catalog-url>/<serviceName>/FeatureServer/<layerId>/<featureId>/addAttachment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data; boundary=----WebKitFormBoundarylXecgaBkMaRGF4yo"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "attachment",
							"type": "file",
							"src": "/Users/hhkaos/Desktop/Screenshot 2019-10-02 at 10.10.24.png"
						},
						{
							"key": "f",
							"value": "json"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				},
				"url": {
					"raw": "{{protocol}}://{{host}}/{{instance}}/arcgis/rest/services/{{serviceName}}/FeatureServer/{{layerId}}/{{featureId}}/addAttachment",
					"protocol": "{{protocol}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{instance}}",
						"arcgis",
						"rest",
						"services",
						"{{serviceName}}",
						"FeatureServer",
						"{{layerId}}",
						"{{featureId}}",
						"addAttachment"
					]
				},
				"description": "This operation adds an attachment to the associated feature and is available only if the layer has advertised that it has attachments. A layer has attachments if its hasAttachments property is true | [Learn more](https://github.com/esri-es/ArcGIS-REST-API/tree/master/HostedFeatureServices#add-attachments-to-a-record)."
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}